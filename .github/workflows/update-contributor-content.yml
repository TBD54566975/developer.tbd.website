name: Update Contributor Content

on:
  issues:
    types: [opened, edited]

jobs:
  update-content:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get Issue Data
        id: issue_data
        run: |
          echo "::set-output name=issue_title::${{ github.event.issue.title }}"
          echo "::set-output name=issue_body::${{ github.event.issue.body }}"
          echo "::set-output name=issue_url::${{ github.event.issue.html_url }}"
          echo "::set-output name=contributor::${{ github.event.issue.user.login }}"

      - name: Check if issue is a content submission
        id: check_content_submission
        run: |
          issue_body="${{ steps.issue_data.outputs.issue_body }}"
          if echo "$issue_body" | grep -q "Type:"; then
            echo "This is a content submission issue"
            echo "::set-output name=continue::true"
          else
            echo "This is not a content submission issue"
            echo "::set-output name=continue::false"
        continue-on-error: false

      - name: Stop if not a content submission
        if: steps.check_content_submission.outputs.continue != 'true'
        run: |
          echo "Skipping workflow as this issue is not a content submission."
        continue-on-error: false

      - name: Update externalContributors.json
        if: steps.check_content_submission.outputs.continue == 'true'
        run: |
          echo "Updating externalContributors.json with issue data"
          issue_body="${{ steps.issue_data.outputs.issue_body }}"
          
          # Extracting the type and thumbnail link from the body
          content_type=$(echo "$issue_body" | grep -oP "(?<=Type: ).*")
          thumbnail_url=$(echo "$issue_body" | grep -oP "(?<=Thumbnail: ).*")
          
          # Construct the new content entry
          new_entry=$(jq -n \
            --arg type "$content_type" \
            --arg thumbnail "$thumbnail_url" \
            --arg title "${{ steps.issue_data.outputs.issue_title }}" \
            --arg link "${{ steps.issue_data.outputs.issue_url }}" \
            --arg contributor "${{ steps.issue_data.outputs.contributor }}" \
            '{type: $type, thumbnail: $thumbnail, title: $title, link: $link, contributor: $contributor}')

          # Update the externalContributors.json file
          jq ". += [$new_entry]" site/src/externalContributors.json > tmp.json
          mv tmp.json site/src/externalContributors.json

      - name: Create a new branch
        if: steps.check_content_submission.outputs.continue == 'true'
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          branch_name="update-contributors-$(date +%Y%m%d%H%M%S)"
          git checkout -b $branch_name
          git add site/src/externalContributors.json
          git commit -m "Update external contributors content from issue #${{ github.event.issue.number }}"
          git push origin $branch_name

      - name: Create pull request
        if: steps.check_content_submission.outputs.continue == 'true'
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: $branch_name
          title: "Update external contributors content from issue #${{ github.event.issue.number }}"
          body: "This pull request updates the externalContributors.json file with content from issue #${{ github.event.issue.number }}."
          labels: ["auto-update"]
          draft: false
          reviewers: taniashiba
